<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pentaho</groupId>
	<artifactId>pentaho-qa</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<name>Pentaho Test Automation</name>
	<url>http://pentaho.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<carina_core_version>3.3.2.62</carina_core_version>
		<pentaho_sdk_version>6.1.0.0-192</pentaho_sdk_version>
		<java_version>1.8</java_version>
		<pentaho-hadoop-hive-jdbc-shim-version>61.2016.06.00-214</pentaho-hadoop-hive-jdbc-shim-version>
		<!-- JMeter properties -->
		<run_test_plan>biserver-extensions-jmeter</run_test_plan>
		<run_server>localhost</run_server>
		<run_port>8080</run_port>
		<run_LoopCount>10</run_LoopCount>
		<run_clean>y</run_clean>
		<run_known_errors>0</run_known_errors>
		<run_test_data>${basedir}/src/test/resources/jmeter_data</run_test_data>
		<pentaho_home>C:\pentaho</pentaho_home>
	</properties>

	<repositories>
		<repository>
			<id>pentaho-nexus</id>
			<url>http://nexus.pentaho.org/content/groups/omni/</url>
		</repository>
		<repository>
			<id>qaprosoft_releases</id>
			<name>Qaprosoft Releases</name>
			<url>http://ci.qaprosoft.com:8081/nexus/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>qaprosoft_snapshots</id>
			<name>Qaprosoft Snapshots</name>
			<url>http://ci.qaprosoft.com:8081/nexus/content/repositories/snapshots/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.qaprosoft</groupId>
			<artifactId>carina-core</artifactId>
			<version>${carina_core_version}</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.ow2.asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3.6</version>
		</dependency>
		<dependency>
			<groupId>com.inflectra.spiratest.addons</groupId>
			<artifactId>TestNGListener</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.2.5</version>
		</dependency>
		<!-- rhino must be included before kettle-core due to the conflict with 
			batik-js -->
		<dependency>
			<groupId>org.mozilla</groupId>
			<artifactId>rhino</artifactId>
			<version>1.7R3</version>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-core</artifactId>
			<version>${pentaho_sdk_version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-engine</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-api</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-core</artifactId>
			<version>${pentaho_sdk_version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.ow2.asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-hadoop-hive-jdbc-shim</artifactId>
			<version>${pentaho-hadoop-hive-jdbc-shim-version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-reporting-engine</groupId>
			<artifactId>pentaho-reporting-engine-classic-core</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libserializer</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libloader</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libfonts</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libxml</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libdocbundle</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>libformat</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-library</groupId>
			<artifactId>librepository</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle-ui-swt</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<!-- Next dependencies are added for SDK 6.0 SHIM testing -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.framework</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.main</artifactId>
			<version>4.2.1</version>
		</dependency>
		<dependency>
			<groupId>com.tinkerpop.blueprints</groupId>
			<artifactId>blueprints-core</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-capability-manager</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-ee-dsc-core</artifactId>
			<version>${pentaho_sdk_version}</version>
			<classifier>obf</classifier>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-metaverse-api</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-platform-extensions</artifactId>
			<version>${pentaho_sdk_version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.xbean</groupId>
					<artifactId>xbean</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.json</groupId>
					<artifactId>json</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.drools</groupId>
					<artifactId>drools-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.drools</groupId>
					<artifactId>drools-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.drools</groupId>
					<artifactId>drools-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pdi-osgi-bridge-core</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho-kettle</groupId>
			<artifactId>kettle5-log4j-plugin</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>pentaho-application-launcher</artifactId>
			<version>${pentaho_sdk_version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.karaf</groupId>
			<artifactId>org.apache.karaf.util</artifactId>
			<version>3.0.3</version>
		</dependency>
		<!-- End of dependencies, that are added for SDK 6.0 SHIM testing -->
		<dependency>
			<groupId>trilead-ssh2</groupId>
			<artifactId>trilead-ssh2</artifactId>
			<version>build213</version>
		</dependency>
		<dependency>
			<groupId>jug-lgpl</groupId>
			<artifactId>jug-lgpl</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>pentaho</groupId>
			<artifactId>simple-jndi</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.metro</groupId>
			<artifactId>webservices-rt</artifactId>
			<version>2.1</version>
		</dependency>
		<!--JobName=PigScriptExecutor/aggregate_pig.kjb -->
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.5.2</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.131</version>
		</dependency>
		<dependency>
			<groupId>org.odftoolkit</groupId>
			<artifactId>odfdom-java</artifactId>
			<version>0.8.6</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>2.5.16</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-complete</artifactId>
			<version>3.5.2</version>
		</dependency>
		<dependency>
			<groupId>jsonpath</groupId>
			<artifactId>jsonpath</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>
		<dependency>
			<groupId>com.linuxense</groupId>
			<artifactId>javadbf</artifactId>
			<version>0.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.1</version>
		</dependency>

	</dependencies>
	<build>
		<!-- Resources for SDK SHIM testing -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>${pentaho_home}/design-tools/data-integration/classes</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${java_version}</source>
					<target>${java_version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>

					<systemPropertyVariables>
						<PENTAHO_HOME>${pentaho_home}</PENTAHO_HOME>
					</systemPropertyVariables>

					<reportsDirectory>${project.build.directory}/surefire</reportsDirectory>
					<suiteXmlFiles>
						<suiteXmlFile>${project.build.directory}/test-classes/TestNG_suites/${suite}.xml</suiteXmlFile>
					</suiteXmlFiles>

				</configuration>
			</plugin>
			<plugin>
				<groupId>com.lazerycode.jmeter</groupId>
				<artifactId>jmeter-maven-plugin</artifactId>
				<version>1.10.0</version>
				<configuration>
					<testResultsTimestamp>false</testResultsTimestamp>
					<overrideRootLogLevel>DEBUG</overrideRootLogLevel>
					<suppressJMeterOutput>false</suppressJMeterOutput>
					<ignoreResultFailures>true</ignoreResultFailures>
					<propertiesUser>
						<run_server>${run_server}</run_server>
						<run_port>${run_port}</run_port>
						<run_test_plan>${run_test_plan}</run_test_plan>
						<run_test_data>${run_test_data}</run_test_data>
						<run_clean>${run_clean}</run_clean>
						<run_LoopCount>${run_LoopCount}</run_LoopCount>
					</propertiesUser>
					<propertiesJMeter>
						<jmeter.save.saveservice.thread_counts>true</jmeter.save.saveservice.thread_counts>
					</propertiesJMeter>
					<jmeterPlugins>
						<plugin>
							<groupId>kg.apc</groupId>
							<artifactId>jmeter-plugins</artifactId>
						</plugin>
					</jmeterPlugins>
					<testFilesIncluded>
						<jMeterTestFile>${run_test_plan}.jmx</jMeterTestFile>
					</testFilesIncluded>
				<!--	<resultsFileFormat>csv</resultsFileFormat> -->
				</configuration>
				<executions>
					<execution>
						<id>jmeter-tests</id>
						<phase>verify</phase>
						<goals>
							<goal>jmeter</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>kg.apc</groupId>
						<artifactId>jmeter-plugins</artifactId>
						<version>1.0.0</version>
						<exclusions>
							<!-- Unfortunately some transitive dependencies cannot be found on 
								mvncentral and we have to explicitly exclude them. For a complete list, see 
								https://github.com/mlex/jmeter-maven-example/ -->
							<exclusion>
								<groupId>kg.apc</groupId>
								<artifactId>perfmon</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.apache.hadoop</groupId>
								<artifactId>hadoop-core</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.apache.hbase</groupId>
								<artifactId>hbase</artifactId>
							</exclusion>

							<!-- These dependencies would override direct JMeter dependencies, 
								which results in version conflicts (e.g. NoSuchMethodError on jmeter startup -->
							<exclusion>
								<groupId>org.apache.jmeter</groupId>
								<artifactId>jorphan</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.apache.bsf</groupId>
								<artifactId>bsf-api</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.bouncycastle</groupId>
								<artifactId>bcmail-jdk15</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.bouncycastle</groupId>
								<artifactId>bcprov-jdk15</artifactId>
							</exclusion>
							<exclusion>
								<groupId>javax.activation</groupId>
								<artifactId>activation</artifactId>
							</exclusion>
							<exclusion>
								<groupId>commons-logging</groupId>
								<artifactId>commons-logging</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>